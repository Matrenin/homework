	ООП — это способ написания кода, позволяющий создавать объекты с помощью одного объекта. 	

	Prototype - это объект, который расширяет наш объект. Мы внутри прототипа ищем свойства, если не нашли в основном объекте. У любого объекта может быть свой прототип, а может и не быть.

	Функции которые лежат в свойстве объекта называют методами.

	This - это ссылка на сам объект. В this будет лежать то, что было слева от точки в момент вызова.

	Разница __proto__ и prototype:
Когда мы пишем toBeep.__proto__ - мы получаем прототип текущего объекта(toBeep). Function.prototype - это свойство у функций. И в этом свойстве лежит объект, который будет использоваться как прототип для всех объектов, которые будут созданы от этой функции конструткора(Function).

	Прототипное наследование -  возможность создать новый объект на основе другого объекта, с его методами и свойствами, не копируя их.

	Инкапсуляция - возможность объединить все свойства и методы и при желании скрыть часть из них.
	
	Полиморфизм - возможность объеденить у разных классов один и тот же метод или свойство.
