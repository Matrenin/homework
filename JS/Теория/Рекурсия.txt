	Рекурсия – это когда функция вызывает сама себя. Приём программирования, полезный в ситуациях, когда задача может быть естественно разделена на несколько аналогичных, но более простых задач. Или когда задача может быть упрощена до несложных действий плюс простой вариант той же задачи. 

	Контекст выполнения – специальная внутренняя структура данных, которая содержит информацию о вызове функции. Она включает в себя конкретное место в коде, на котором находится интерпретатор, локальные переменные функции, значение this и прочую служебную информацию.

	Рекурсия приводит к хранению всех данных для неоконченных внешних вызовов в стеке. Из за этого рекурсия больше нагружает память, чем циклы. При это рекурсия работает при любом уровне вложености в объектах.

	Рекурсивная структура данных – это структура, которая повторяет саму себя в своих частях.

	========

	Изучить JS:
1. Синтаксис(Es5, es6) в чем разница и принцип работы.
2. Объекты.
3. Prototype.
4. Контекст.
5. Замыкание.
6. Асинхронность(event loop).
7. fetch(как работает).
8. DOM(как js взаимодействует с html).

	Vue:
1. Принципы компонентов и как передавать параметры.
2. Как делать динамические страницы.
3. Загрузка жанных с сервера и отображения их с помощью фреймворка.
4. Основа работы с формами.


	Глобально:
Понимать как front-end взаимодействует с back-end.
Основы архитектуры frond-end приложений.















